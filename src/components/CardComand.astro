---
interface Props {
  title: string;
}

const { title } = Astro.props;
const uniqueId = `card-${title.replace(/\s+/g, "-").toLowerCase()}`; // Genera un id único basado en el título
---

<pre class="card-comand">
    <code id={uniqueId}>{title}</code>
    <button class="card-button" data-title-id={uniqueId}>
        <span class="card-button-text hidden">Copied</span>
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-clipboard"><rect width="8" height="4" x="8" y="2" rx="1" ry="1" /><path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" /></svg>
    </button>
</pre>

<style>
    .card-comand {
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: space-between;
    }
    .card-comand .card-button {
        display: flex;
    }
    .hidden {
        display: none;
    }
    .show {
        display: block;
    }
</style>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        const buttons = document.querySelectorAll(".card-button");

        buttons.forEach(button => {
            const titleId = button.getAttribute("data-title-id") as string;
            if(!titleId) return 
            const titleElement = document.getElementById(titleId);
            
            const buttonText = button.querySelector(".card-button-text");

            button.addEventListener("click", () => {
                if (titleElement?.textContent) {
                    navigator.clipboard.writeText(titleElement.textContent);
                    buttonText?.classList.remove("hidden");
                    buttonText?.classList.add("show");
                }
                setTimeout(() => {
                    buttonText?.classList.remove("show");
                    buttonText?.classList.add("hidden");
                }, 1000);
            });
        });
    });
</script>
