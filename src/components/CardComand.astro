---
interface Props {
  title: string;
}

const { title } = Astro.props;
---

<pre class="card-comand">
    <code id="card-title">{title}</code>
    <button id="card-button">
        <span id="card-button-text" class="hidden">Copied </span>
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-clipboard"><rect width="8" height="4" x="8" y="2" rx="1" ry="1" /><path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" /></svg>
    </button>
</pre>

<style>
    .card-comand{
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: space-between;
    }
    .card-comand button{
        display: flex;
    }
    .hidden {
        display: none;
    }
    .show {
        display: block;
    }
    
</style>
<script>
    const button = document.getElementById("card-button")
    const title = document.getElementById("card-title")
    const button_text = document.getElementById("card-button-text")
    
    button?.addEventListener("click",()=>{
        if(title?.textContent){
            navigator.clipboard.writeText(title?.textContent)
            button_text?.classList.remove("hidden")
            button_text?.classList.add("show")
        }
        setTimeout(()=>{
            button_text?.classList.remove('show')
            button_text?.classList.add("hidden")
        },1000)
    })
</script>